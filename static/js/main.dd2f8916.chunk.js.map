{"version":3,"sources":["containers/login/login.module.css","containers/registration/registration.module.css","types.js","containers/home/index.js","actions/index.js","containers/login/index.js","containers/registration/index.js","App.js","reportWebVitals.js","reducers/countReducer.js","reducers/removeReducer.js","reducers/todoReducer.js","reducers/userReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["module","exports","ADD_COUNT","REDUCE_COUNT","ADD_TODO","ADD_TODO_SUCCESS","ADD_TODO_FAIL","REMOVE_TODO","REMOVE_TODO_SUCCESS","REMOVE_TODO_FAIL","ADD_USER","ADD_USER_SUCCESS","ADD_USER_FAIL","CHECK_USER","CHECK_USER_SUCCESS","CHECK_USER_FAIL","Home","prevProps","todoData","this","props","isLoading","console","log","addSubmit","inputVal","_inputEle","value","data","task","key","Date","now","addTodo","removeTodo","style","styles","main","countData","onClick","reduceSubmit","addCount","type","placeholder","ref","ele","map","list","removeData","React","Component","display","flexDirection","justifyContent","alignItems","mapDispatchToProps","num","payload","dispatch","setTimeout","error","connect","state","count","todo","remove","Login","userData","usernameVal","_usernameEle","pwdVal","_pwdEle","username","password","setState","status","window","location","href","Container","className","classes","login_container","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","Button","variant","checkUser","to","user","Registration","addUser","reg_container","App","basename","process","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","countReducer","action","undefined","defaultState","removeReducer","filter","todoReducer","userReducer","active","combineReducers","persistConfig","version","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dd2f8916.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"login_login_container__1nkXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg_container\":\"registration_reg_container__1IiXd\"};","export const ADD_COUNT = 'ADD_COUNT';\r\nexport const REDUCE_COUNT = 'REDUCE_COUNT';\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\r\nexport const ADD_TODO_FAIL = 'ADD_TODO_FAIL';\r\n\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const REMOVE_TODO_SUCCESS = 'REMOVE_TODO_SUCCESS';\r\nexport const REMOVE_TODO_FAIL = 'REMOVE_TODO_FAIL';\r\n\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\r\n\r\nexport const CHECK_USER = 'CHECK_USER';\r\nexport const CHECK_USER_SUCCESS = 'CHECK_USER_SUCCESS';\r\nexport const CHECK_USER_FAIL = 'CHECK_USER_FAIL';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {addSubmit, addTodo, reduceSubmit, removeTodo} from '../../actions';\r\n\r\nclass Home extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     console.log(\"count data ....\", this.props.countData);\r\n    // }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {todoData} = this.props;\r\n\r\n        //check if previous todoData.isLoading == false && todoData.isLoading == true after update\r\n        if(prevProps.todoData.isLoading && !todoData.isLoading) {\r\n            console.log(\"DATA IS UPDATED\");\r\n            // alert('Success');\r\n        } \r\n    }\r\n\r\n    addCount() {\r\n        this.props.addSubmit(1);\r\n    }\r\n\r\n    addTodo() {\r\n        const inputVal = this._inputEle.value;\r\n        if(inputVal !== '') {\r\n            const data = {\r\n                task: inputVal,\r\n                key: Date.now(),\r\n            }\r\n            this.props.addTodo(data);\r\n            \r\n            this._inputEle.value = '';\r\n        }\r\n    }\r\n\r\n    removeTodo(key) {\r\n        this.props.removeTodo(key);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.main}>\r\n                <h1>This is Home</h1>\r\n                <h1>Count: {this.props.countData}</h1>\r\n\r\n                <div>\r\n                    <button onClick={() => this.props.reduceSubmit()}>Reduce</button>\r\n                    <button onClick={() => this.addCount()}>Add</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <input \r\n                        type='text'\r\n                        placeholder='Enter Task'\r\n                        ref={(ele) => (this._inputEle = ele)}\r\n                    />\r\n                    {\r\n                        this.props.todoData.isLoading ? (<p>LOADING...</p>) : (\r\n                            <button onClick={() => this.addTodo()}>Submit</button>\r\n                    )}\r\n\r\n                    <ul>\r\n                        {this.props.todoData.data.map((list) => (\r\n                            <div>\r\n                                {\r\n                                    this.props.removeData.isLoading ? (<p>DELETING...</p>) : (\r\n                                    <div>    \r\n                                        <li>\r\n                                            {list.task};\r\n                                        </li>\r\n                                        <button onClick={() => this.removeTodo(list.key)}>Delete</button>\r\n                                    </div>    \r\n                                )}\r\n                            </div>\r\n                        )) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countData: state.count,\r\n    todoData: state.todo,\r\n    removeData: state.remove,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addSubmit: addSubmit, \r\n    reduceSubmit: reduceSubmit,\r\n    addTodo: addTodo,\r\n    removeTodo: removeTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as type from '../types';\r\n\r\nexport const addSubmit = (num) => {\r\n    return {\r\n        type: type.ADD_COUNT,\r\n        payload: num,\r\n    }\r\n};\r\n\r\nexport const reduceSubmit = () => {\r\n    return {\r\n        type: type.REDUCE_COUNT,\r\n    };\r\n};\r\n\r\nexport const addTodo = (data) => (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: type.ADD_TODO,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.ADD_TODO_SUCCESS,\r\n                payload: data,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch(error) {\r\n        dispatch({\r\n            type: type.ADD_TODO_FAIL,\r\n            error: error\r\n        });\r\n    }\r\n\r\n    // return {\r\n    //     type: type.ADD_TODO,\r\n    //     payload: data,\r\n    // }\r\n}\r\n\r\nexport const removeTodo = (data) => (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: type.REMOVE_TODO,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.REMOVE_TODO_SUCCESS,\r\n                payload: data,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch(error) {\r\n        dispatch({\r\n            type: type.REMOVE_TODO_FAIL,\r\n            error: error,\r\n        });\r\n    }\r\n}\r\n\r\nexport const addUser = (data) => (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: type.ADD_USER,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.ADD_USER_SUCCESS,\r\n                payload: data,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch(error) {\r\n        dispatch({\r\n            type: type.ADD_USER_FAIL,\r\n            error: error\r\n        });\r\n    }\r\n}\r\n\r\nexport const checkUser = (data) => (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: type.CHECK_USER,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: type.CHECK_USER_SUCCESS,\r\n                payload: data,\r\n            })\r\n        }, 3000);\r\n    }\r\n    catch(error) {\r\n        dispatch({\r\n            type: type.CHECK_USER_FAIL,\r\n            error: error\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {checkUser} from '../../actions';\r\n\r\nimport { Container, Button, Form } from 'react-bootstrap';\r\nimport classes from './login.module.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            state: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {userData} = this.props;\r\n\r\n        //check if previous todoData.isLoading == false && todoData.isLoading == true after update\r\n        if(prevProps.userData.isLoading && !userData.isLoading) {\r\n            console.log(\"DATA IS UPDATED\");\r\n            console.log(prevProps.userData);\r\n            // alert('Your account has been registered!');\r\n            // setTimeout(() => {\r\n            //     <Redirect to='/login'/>\r\n            // }, 3000);\r\n        } \r\n    }\r\n\r\n    checkUser() {\r\n        const usernameVal = this._usernameEle.value;\r\n        const pwdVal = this._pwdEle.value;\r\n        const dataName = this.props.userData.data.map((list) => {\r\n            if(list.username === usernameVal && list.password === pwdVal) {\r\n                this.setState({status: true});\r\n                // window.location.href=\"/home\";\r\n            } //else {\r\n                //alert(\"Username/Password is invalid\");\r\n            })   \r\n            //}})\r\n        \r\n        this._usernameEle.value = '';\r\n        this._pwdEle.value = '';\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.status === true) {\r\n        window.location.href=\"/home\";\r\n            // <Redirect to=\"/home\" />\r\n        }\r\n\r\n        return(\r\n            <Container className={classes.login_container}>\r\n                \r\n                <h1>Login</h1>\r\n                <Form onSubmit={e => {e.preventDefault()}}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter text\" ref={(ele) => (this._usernameEle = ele)}/>\r\n                        {/* <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text> */}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" ref={(ele) => (this._pwdEle = ele)}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={() => {this.checkUser()}} >\r\n                        {/* <Link to=\"/home\" style={{color: \"#FFFFFF\", textDecoration: \"none\"}}>Submit</Link> */}\r\n                        Submit\r\n                    </Button>\r\n                    <br /><br />\r\n                    <p>Don't have an account? <br /> <Link to='/registration'>Sign Up here</Link></p>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userData: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    checkUser: checkUser, \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {addUser} from '../../actions';\r\n\r\nimport { Container, Button, Form } from 'react-bootstrap';\r\nimport classes from './registration.module.css';\r\n\r\nclass Registration extends React.Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {userData} = this.props;\r\n\r\n        //check if previous todoData.isLoading == false && todoData.isLoading == true after update\r\n        if(prevProps.userData.isLoading && !userData.isLoading) {\r\n            console.log(\"DATA IS UPDATED\");\r\n            console.log(prevProps.userData);\r\n            // alert('Your account has been registered!');\r\n            // setTimeout(() => {\r\n            //     <Redirect to='/login'/>\r\n            // }, 3000);\r\n        } \r\n    }\r\n\r\n    addUser() {\r\n        const usernameVal = this._usernameEle.value;\r\n        const pwdVal = this._pwdEle.value;\r\n        if((usernameVal !== '') && (pwdVal !== '')) {\r\n            const data = {\r\n                username: usernameVal,\r\n                password: pwdVal,\r\n                key: Date.now(),\r\n            }\r\n            this.props.addUser(data);\r\n            console.log(data);\r\n            \r\n            this._usernameEle.value = '';\r\n            this._pwdEle.value = '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className={classes.reg_container}>\r\n                <h1>Registration</h1>\r\n                <Form onSubmit={e => {e.preventDefault()}}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter text\" ref={(ele) => (this._usernameEle = ele)}/>\r\n                        {/* <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text> */}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" ref={(ele) => (this._pwdEle = ele)}/>\r\n                    </Form.Group>\r\n                    {\r\n                        this.props.userData.isLoading ? (<p>LOADING...</p>) : (\r\n                        <div>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={() => {this.addUser()}}>\r\n                                Submit\r\n                            </Button>  \r\n                        </div>     \r\n                    )}\r\n                    <br />\r\n                    <p>Already have an account? <br /> <Link to='/login'>Login here</Link></p>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userData: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addUser: addUser, \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","import Home from './containers/home';\nimport Login from './containers/login';\nimport Registration from './containers/registration';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL} className=\"App\">\n      <Switch>\n\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/\" component={Registration} />\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from '../types';\r\n\r\nconst defaultState = () => 0;\r\n\r\nconst countReducer = (state, action) => {\r\n    if(state === undefined) {\r\n        return defaultState();\r\n    }\r\n\r\n    switch(action.type) {\r\n        case type.ADD_COUNT:\r\n            //you can do the action(logic) in action.payload\r\n            return state += action.payload;\r\n        case type.REDUCE_COUNT:\r\n            //or you can do the action(logic) immediately from here\r\n            return (state -= 1);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default countReducer;","import * as type from '../types';\r\n\r\nconst defaultState = {\r\n    isLoading: false,\r\n    data: [],\r\n    error: null,\r\n}\r\n\r\nconst removeReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case type.REMOVE_TODO:\r\n            // console.log([...state.data]);\r\n            return {\r\n                isLoading: true,\r\n                data: [...state.data],\r\n                error: null,\r\n            };\r\n        case type.REMOVE_TODO_SUCCESS:\r\n            // const filterData = [...state.data.filter(\r\n            //     data => data.key !== action.payload)];\r\n\r\n            return {\r\n                isLoading: false,\r\n                data: state.data.filter(data => data.key !== action.payload),\r\n                error: null,\r\n            };\r\n        case type.REMOVE_TODO_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: null,\r\n            }\r\n        default:\r\n            return defaultState;\r\n    }\r\n}\r\n\r\nexport default removeReducer;","import * as type from '../types';\r\n\r\nconst defaultState = {\r\n    isLoading: false,\r\n    data: [],\r\n    error: null\r\n};\r\n\r\nconst todoReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case type.ADD_TODO:\r\n            console.log([...state.data]);\r\n            return {\r\n                isLoading: true,\r\n                data: [...state.data],\r\n                error: null,\r\n            }\r\n            // return state = [...state, action.payload];\r\n        case type.ADD_TODO_SUCCESS:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data, action.payload],\r\n                error: null\r\n            };\r\n        case type.ADD_TODO_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: action.error\r\n        };\r\n        case type.REMOVE_TODO:\r\n            // console.log([...state.data]);\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: null,\r\n            };\r\n        case type.REMOVE_TODO_SUCCESS:\r\n            // const filterData = [...state.data.filter(\r\n            //     data => data.key !== action.payload)];\r\n\r\n            return {\r\n                isLoading: false,\r\n                data: state.data.filter(data => data.key !== action.payload),\r\n                error: null,\r\n            };\r\n        case type.REMOVE_TODO_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: null,\r\n            }\r\n        default:\r\n            return defaultState;\r\n    }\r\n\r\n}\r\n\r\nexport default todoReducer;","import * as type from '../types';\r\n\r\nconst defaultState = () => ({\r\n    isLoading: false,\r\n    data: [],\r\n    error: null,\r\n    active: false,\r\n});\r\n\r\nconst userReducer = (state, action) => {\r\n    if (state === undefined) { return defaultState(); }\r\n\r\n    switch(action.type) {\r\n        case type.ADD_USER:\r\n            console.log([...state.data]);\r\n            return {\r\n                isLoading: true,\r\n                data: [...state.data],\r\n                error: null,\r\n                active: 0,\r\n            };\r\n        case type.ADD_USER_SUCCESS:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data, action.payload],\r\n                error: null,\r\n                active: 1,\r\n            };\r\n        case type.ADD_USER_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: action.error,\r\n                active: 0,\r\n        };\r\n\r\n        case type.CHECK_USER:\r\n            console.log([...state.data]);\r\n            return {\r\n                isLoading: true,\r\n                data: [...state.data],\r\n                error: null,\r\n                active: 0,\r\n            };\r\n        case type.CHECK_USER_SUCCESS:\r\n            return {\r\n                isLoading: false,\r\n                // data: state.data.map(data => (data.username === action.payload.username) && (data.password === action.payload.password)),\r\n                data: [...state.data, action.payload],\r\n                error: null,\r\n                active: 1,\r\n            };\r\n        case type.CHECK_USER_FAIL:\r\n            return {\r\n                isLoading: false,\r\n                data: [...state.data],\r\n                error: action.error,\r\n                active: 0,\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from 'redux';\r\n\r\nimport countReducer from './countReducer';\r\nimport removeReducer from './removeReducer';\r\nimport todoReducer from './todoReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n    count: countReducer,\r\n    todo: todoReducer,\r\n    remove: removeReducer,\r\n    user: userReducer,\r\n})","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from '../reducers/index';\r\n// import countReducer from \"../reducers/countReducer\";\r\n// import todoReducer from \"../reducers/todoReducer\";\r\n\r\n//Saves all the data in a storage that is placed in the \"root\" (basically the main html file)\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n}\r\n\r\n//used to \"persist\" the reducer files\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n//functions similarly as \"export default configureStore\"\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }),\r\n  })\r\n  \r\nlet persistor = persistStore(store)\r\n\r\nexport { store, persistor };\r\n// export default configureStore({\r\n//     reducer: {\r\n//         count: countReducer,\r\n//         todo: todoReducer,\r\n//     },\r\n// })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { store, persistor } from './store/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}